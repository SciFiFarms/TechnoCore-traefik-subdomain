version: "3.5"

networks:
  ingress:

volumes:
  traefik-cert: 

secrets:
  ingress_admin_password:
    name: ${STACK_NAME:-technocore}_ingress_admin_password
    external: true
  ingress_acme_token:
    name: ${STACK_NAME:-technocore}_ingress_acme_token
    external: true

services:
  ingress:
    image: traefik:v1.7.12-alpine
    ports:
    environment:
      - ${ACME_TOKEN_ENV}={{"{{DOCKER-SECRET:acme_token}}"}}
      - ADMIN_USER=${ADMIN_USER:-admin}
      - EMAIL=$EMAIL
      - TRAEFIK_LETS_ENCRYPT_CHALLENGE=${TRAEFIK_LETS_ENCRYPT_CHALLENGE:---acme.httpChallenge.entryPoint=http}       
      - TRAEFIK_ACME_CASERVER=${TRAEFIK_ACME_CASERVER}
    deploy:
      replicas: ${TRAEFIK_REPLICAS:-1}
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      labels:
        - traefik.frontend.rule=Host:traefik.${DOMAIN?Variable DOMAIN not set}
        - traefik.enable=true
        - traefik.port=8080
        - traefik.tags=ingress 
        - traefik.docker.network=${STACK_NAME:-technocore}_ingress
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - ${TRAEFIK_BASIC_AUTH}
    image: ${image_provider:-scififarms}/technocore-traefik-subdomain:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    secrets:
      - source: ingress_admin_password
        target: admin_password
      - source: ingress_acme_token
        target: acme_token
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-cert:/etc/traefik/acme/ 
    networks:
      - ingress
