version: "3.5"

networks:
  ingress:

volumes:
  traefik-cert: 

secrets:
  ingress_admin_password:
    name: ${STACK_NAME:-technocore}_ingress_admin_password
    external: true
  ingress_dns_token:
    name: ${STACK_NAME:-technocore}_ingress_dns_token
    external: true

services:
  ingress:
    ports:
      # Without this, the detected IP address is always the docker gateway. 
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    environment:
      - ${DNS_TOKEN_ENV:-SET_DNS_TOKEN_ENV}={{"{{DOCKER-SECRET:dns_token}}"}}
      - ${DNS_USERNAME_ENV:-SET_DNS_USERNAME_ENV}=${DNS_USERNAME:-SET_ME_PLEASE}
      - ADMIN_USER=${ADMIN_USER:-admin}
      - EMAIL=$EMAIL
      - TRAEFIK_LETS_ENCRYPT_CHALLENGE=${TRAEFIK_LETS_ENCRYPT_CHALLENGE:---acme.httpChallenge.entryPoint=http}       
      ## For Traefik 2.0
      #- TRAEFIK_LETS_ENCRYPT_CHALLENGE=${TRAEFIK_LETS_ENCRYPT_CHALLENGE:---certificatesResolvers.lets-encrypt.acme.httpChallenge.entryPoint=http}       
      - TRAEFIK_ACME_CASERVER=${TRAEFIK_ACME_CASERVER:-}
      - DOMAIN=$DOMAIN
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      labels: 
        - traefik.frontend.rule=$TRAEFIK_SUBDOMAIN_ROUTING_LABEL
        - traefik.frontend.priority=$TRAEFIK_SUBDOMAIN_ROUTING_LABEL_PRIORITY
        - traefik.port=8080
        - ${TRAEFIK_BASIC_AUTH}
        - traefik.enable=true
        - traefik.tags=ingress
        - traefik.docker.network=${STACK_NAME:-technocore}_ingress
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # TODO: Move to Traefik 2.0 and either use these, or have alternative to what already exists in entrypoint.sh
        # https://docs.traefik.io/migration/v1-to-v2/
        #- traefik.http.routers.traefik.service=api@internal
        #- traefik.http.services.traefik.loadbalancer.server.port=8080
        ## TODO: This probably needs to support multiple domains. 
        #- traefik.http.routers.traefik.rule=$TRAEFIK_SUBDOMAIN_ROUTING_LABEL
        #- traefik.http.routers.traefik.priority=$TRAEFIK_SUBDOMAIN_ROUTING_LABEL_PRIORITY
        #- traefik.http.routers.traefik.entrypoints=web-secure
        #- traefik.http.routers.traefik.tls
        #- traefik.http.routers.traefik.tls.domains[0].main=$DOMAIN
        #- traefik.http.routers.traefik.tls.domains[0].sans="*.$DOMAIN"
        #- $TRAEFIK_BASIC_AUTH
        #- $TRAEFIK_BASIC_AUTH_MIDDLEWARE
        #- traefik.enable=true
        ## Redirect http -> https:
        ## https://blog.containo.us/traefik-2-0-docker-101-fc2893944b9d#49a5
        #- traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
        #- traefik.http.routers.redirect-http.rule=hostregexp(`{host:.+}`)
        #- traefik.http.routers.redirect-http.entrypoints=web
        ## Migh need these?
        #- traefik.tags=ingress
        #- traefik.docker.network=${STACK_NAME:-technocore}_ingress
    image: ${image_provider:-scififarms}/technocore-traefik-subdomain:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    secrets:
      - source: ingress_admin_password
        target: admin_password
      - source: ingress_dns_token
        target: dns_token
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-cert:/etc/traefik/acme/ 
    networks:
      ingress:
